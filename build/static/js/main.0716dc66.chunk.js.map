{"version":3,"sources":["Location.js","Hours.js","DailyForecast.js","navbar.js","SavedLocations.js","App.js","reportWebVitals.js","index.js"],"names":["Location","_ref","data","React","createElement","className","location","name","region","country","current","src","condition","icon","alt","text","temp_c","humidity","wind_kph","moment","format","Hourly","forecast","forecastday","hour","filter","_","index","map","key","time","concat","DailyForecast","day","date","maxtemp_c","mintemp_c","avgtemp_c","maxwind_kph","avghumidity","daily_chance_of_rain","uv","Navbar","onSearch","onSave","setLocation","useState","isOpen","setIsOpen","type","placeholder","value","onChange","e","target","onClick","handleSearch","Link","to","toggleMenu","SavedLocations","users","onDelete","user","_id","username","savedLocations","App","setData","loading","setLoading","error","setError","ip","setIp","forecastData","setForecastData","setSavedLocations","newLocation","setNewLocation","setUsername","newUser","setNewUser","enteringUsername","setEnteringUsername","useEffect","async","axios","get","weatherResponse","forecastResponse","message","fetchLocationAndWeather","response","console","fetchSavedLocations","selectedUser","setSelectedUser","handleSaveLocation","post","then","find","push","catch","alert","Router","weatherUrl","forecastUrl","Fragment","Routes","Route","path","element","handleCreateUser","handleDeleteLocation","userId","locationId","delete","updatedUsers","loc","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0716dc66.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport './Location.css';\n\nconst Location = ({data}) => {\n\n  return (\n    <div className=\"weather-app\">\n      <main>\n       { data ? (\n          <div className=\"weather-info\">\n            <div className='weather-Location'>\n            <h2>Your Location :</h2>\n            <p><span>City : </span>{data.location.name}</p>\n            <p><span>State: </span>{data.location.region}</p>\n            <p><span>Country:</span> {data.location.country}</p>\n            </div>\n            <div className=\"weather-details\">\n              {data.current && (\n                <div className='details'>\n                  <div>\n                  <img src={data.current.condition.icon} alt={data.current.condition.text} />\n                  </div>\n                  <div>\n                    <p><span>{data.current.condition.text}</span></p>\n                    <p><span>{data.current.temp_c}Â°C</span></p>\n                    <p><span>Humidity:</span> {data.current.humidity}%</p>\n                    <p><span>Wind Speed:</span> {data.current.wind_kph} km/h</p>\n                    <p>{moment().format('MMMM Do YYYY, h:mm:ss a')}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          <p>No data available</p>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default Location;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport './Hours.css';\n\nconst Hourly = ({data}) => {\n\n  // const [weather, setWeather] = useState(null);\n  // const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchLocationAndWeather = async () => {\n  //     try {\n  //       const weatherResponse = await fetch(`https://api.weatherapi.com/v1/forecast.json?key=c7829ba6854f44a1b60165127242806&q=${location}&hours=24`);\n  //       const weatherData = await weatherResponse.json();\n  //       setWeather(weatherData);\n  //       setLoading(false);\n  //     } catch (error) {\n  //       setError(`Error fetching location or weather data: ${error.message}`);\n  //       setLoading(false);\n  //     }\n  //   };\n\n  //   fetchLocationAndWeather();\n  // }, []);\n  const getHourlyForecast = () => {\n    if (!data) return [];\n    const hourlyData = data.forecast.forecastday[0].hour;\n    return hourlyData.filter((_, index) => index % 2 === 0);\n};\n  return (\n    <div className=\"weather-app\">\n      <main>\n        {data? (\n          <div className=\"weather-forecast\">\n            <div><h2>Hourly Forecast</h2></div>\n            <div className=\"hourly-forecast\">\n                            {getHourlyForecast().map((hour, index) => (\n                                <div key={index} className=\"hourly\">\n                                    <p>{moment(hour.time).format('h:mm A')}</p>\n                                    <img src={`https:${hour.condition.icon}`} alt={hour.condition.text} />\n                                    <p>{hour.temp_c}Â°C</p>\n                                    <p>{hour.condition.text}</p>\n                                </div>\n                            ))}\n            </div>\n          </div>\n        ) : (\n          <p>No data available</p>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default Hourly;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport './DailyForecast.css';\n\nconst DailyForecast = ({data}) => {\n\n\n    return (\n        <div className=\"daily-forecast\">\n            <header>\n                <h1>Daily Forecast</h1>\n            </header>\n            <main>\n                { data? (\n                    <div className=\"forecast-info\">\n                         <div className='weather-s'>\n                                <h2><span>Your Location :</span></h2>\n                                <p><span>City : </span>{data.location.name}</p>\n                                <p><span>State: </span>{data.location.region}</p>\n                                <p><span>Country:</span> {data.location.country}</p>\n            </div>\n                        {data.forecast.forecastday.map((day, index) => (\n                            <div key={index} className=\"forecast-day\">\n                                <h3>{moment(day.date).format('MMMM Do YYYY')}</h3>\n                                <div className=\"day-details\">\n                                    <img src={`https:${day.day.condition.icon}`} alt={day.day.condition.text} />\n                                    <div>\n                                        <p>{day.day.condition.text}</p>\n                                        <p>Max Temp: {day.day.maxtemp_c}Â°C</p>\n                                        <p>Min Temp: {day.day.mintemp_c}Â°C</p>\n                                        <p>Average Temp: {day.day.avgtemp_c}Â°C</p>\n                                        <p>Max Wind: {day.day.maxwind_kph} km/h</p>\n                                        <p>Humidity: {day.day.avghumidity}%</p>\n                                        <p>Chance of Rain: {day.day.daily_chance_of_rain}%</p>\n                                        <p>UV Index: {day.day.uv}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    <p>Loading...</p>\n                )}\n            </main>\n        </div>\n    );\n};\n\nexport default DailyForecast;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './navbar.css';\n\nconst Navbar = ({ onSearch, onSave }) => {\n    const [location, setLocation] = useState('');\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleInputChange = (e) => {\n        setLocation(e.target.value);\n    };\n\n    const handleSearch = () => {\n        onSearch(location);\n    };\n\n    const handleSave = () => {\n        onSave(location);\n    };\n\n    const toggleMenu = () => {\n        setIsOpen(!isOpen);\n    };\n\n    return (\n        <nav className=\"navbar\">\n            <div className=\"navbar-container\">\n               <div className=\"navbar-logo\">Weatherly</div>\n                <div className=\"navbar-search\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter location\"\n                        value={location}\n                        onChange={handleInputChange}\n                        className=\"navbar-input\"\n                    />\n                    <button onClick={handleSearch} className=\"navbar-button\">\n                        Search\n                    </button>\n                </div>\n                <ul className={`navbar-menu ${isOpen ?'open':''}`}>\n                    <li className=\"navbar-item\">\n                        <Link to=\"/\" className=\"navbar-links\">\n                            Home\n                        </Link>\n                    </li>\n                    <li className=\"navbar-item\">\n                        <Link to=\"/daily-forecast\" className=\"navbar-links\">\n                            Daily Forecast\n                        </Link>\n                    </li>\n                    <li className=\"navbar-item\">\n                        <Link to=\"/Saved-Locations\" className=\"navbar-links\">\n                            Saved Locations\n                        </Link>\n                    </li>\n                </ul>\n                <div className=\"navbar-hamburger\" onClick={toggleMenu}>\n                    <div className={`bar1 ${isOpen ? 'open' : ''}`}></div>\n                    <div className={`bar2 ${isOpen ? 'open' : ''}`}></div>\n                    <div className={`bar3 ${isOpen ? 'open' : ''}`}></div>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","// SavedLocations.js\n\nimport React from 'react';\nimport axios from 'axios';\nimport './SavedLocations.css';\n\nconst SavedLocations = ({ users, onDelete }) => {\n  const handleDeleteLocation = (userId, locationId) => {\n    axios.delete(`http://localhost:3000/users/${userId}/locations/${locationId}`)\n      .then(() => {\n        onDelete(userId, locationId);\n      })\n      .catch((error) => console.error('Error deleting location', error));\n  };\n\n  return (\n    <div className=\"saved-locations\">\n      {users.map((user) => (\n        <div key={user._id} className=\"user-locations\">\n          <h2>{user.username}</h2>\n          <ul>\n            {user.savedLocations.map((location) => (\n              <li key={location._id}>\n                {location.name}\n                <button onClick={() => onDelete(user._id, location._id)}>Delete</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SavedLocations;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport Location from './Location';\nimport Hourly from './Hours';\nimport DailyForecast from './DailyForecast';\nimport Navbar from './navbar';\nimport SavedLocations from './SavedLocations';\nimport './App.css';\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [ip, setIp] = useState('');\n  const [forecastData, setForecastData] = useState({});\n  const [savedLocations, setSavedLocations] = useState([]);\n  const [newLocation, setNewLocation] = useState('');\n  const [username, setUsername] = useState('');\n  const [newUser, setNewUser] = useState('');\n  const [enteringUsername, setEnteringUsername] = useState(false); // Track entering username state\n\n  useEffect(() => {\n    const fetchLocationAndWeather = async () => {\n      try {\n        const ipResponse = await axios.get('https://api.ipify.org?format=json');\n        const ip = ipResponse.data.ip;\n        setIp(ip);\n\n        const weatherResponse = await axios.get(`http://api.weatherapi.com/v1/current.json?key=c7829ba6854f44a1b60165127242806&q=${ip}`);\n        const forecastResponse = await axios.get(`http://api.weatherapi.com/v1/forecast.json?key=c7829ba6854f44a1b60165127242806&q=${ip}&days=7`);\n\n        setData(weatherResponse.data);\n        setForecastData(forecastResponse.data);\n        setLoading(false);\n      } catch (error) {\n        setError(`Error fetching location or weather data: ${error.message}`);\n        setLoading(false);\n      }\n    };\n\n    fetchLocationAndWeather();\n  }, []);\n\n  useEffect(() => {\n    const fetchSavedLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/users');\n        setSavedLocations(response.data);\n      } catch (error) {\n        console.error('Error fetching saved locations', error);\n      }\n    };\n\n    fetchSavedLocations();\n  }, []);\n\n  const handleSearch = (location) => {\n    const weatherUrl = `http://api.weatherapi.com/v1/current.json?key=c7829ba6854f44a1b60165127242806&q=${location}`;\n    const forecastUrl = `http://api.weatherapi.com/v1/forecast.json?key=c7829ba6854f44a1b60165127242806&q=${location}&days=7`;\n\n    axios.get(weatherUrl)\n      .then((response) => setData(response.data))\n      .catch((error) => console.error('Error fetching weather data', error));\n\n    axios.get(forecastUrl)\n      .then((response) => setForecastData(response.data))\n      .catch((error) => console.error('Error fetching forecast data', error));\n  };\n\n\n  const [selectedUser, setSelectedUser] = useState(null);\n\n\n  const handleSaveLocation = () => {\n    if (!newLocation) {\n      alert('Please enter a location');\n      return;\n    }\n    if (!selectedUser) {\n      alert('Please select a user');\n      return;\n    }\n\n    axios.post(`http://localhost:3000/users/${selectedUser._id}/locations`, { name: newLocation })\n      .then((response) => {\n        const updatedUser = savedLocations.find((user) => user._id === selectedUser._id);\n        updatedUser.savedLocations.push({ name: newLocation });\n        setSavedLocations([...savedLocations]);\n        setNewLocation('');\n      })\n      .catch((error) => console.error('Error saving location', error));\n  };\n\n  const handleDeleteLocation = (userId, locationId) => {\n    axios.delete(`http://localhost:3000/users/${userId}/locations/${locationId}`)\n      .then(() => {\n        const updatedUsers = savedLocations.map(user =>\n          user._id === userId ? { ...user, savedLocations: user.savedLocations.filter(loc => loc._id !== locationId) } : user\n        );\n        setSavedLocations(updatedUsers);\n      })\n      .catch((error) => console.error('Error deleting location', error));\n  };\n\n  const handleCreateUser = () => {\n    if (!newUser) {\n      alert('Please enter a username');\n      return;\n    }\n\n    setEnteringUsername(true); // Set entering username state\n\n    axios.post('http://localhost:3000/users', { username: newUser })\n      .then((response) => {\n        setSavedLocations([...savedLocations, response.data]);\n        setUsername(response.data);\n        setNewUser(''); // Reset newUser state after successful creation\n        setEnteringUsername(false); // Reset entering username state\n      })\n      .catch((error) => {\n        console.error('Error creating user', error);\n        setEnteringUsername(false); // Reset entering username state on error\n      });\n  };\n\n  return (\n    <Router>\n      <Navbar onSearch={handleSearch} onSave={handleSaveLocation} />\n      <div className=\"App\">\n        {loading ? (\n          <div>Loading...</div>\n        ) : error ? (\n          <div>{error}</div>\n        ) : (\n          <>\n            <Routes>\n              <Route path=\"/\" element={\n                <>\n                  <Location data={data} />\n                  <Hourly data={forecastData} />\n                </>\n              } />\n              <Route path=\"/daily-forecast\" element={<DailyForecast data={forecastData} />} />\n              <Route path=\"/Saved-Locations\" element={\n                <>\n                <div className='ins'>\n                  <div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Username\"\n                      value={newUser}\n                      onChange={(e) => setNewUser(e.target.value)}\n                    />\n                    <button onClick={handleCreateUser}>Create User</button>\n\n                  </div>\n                  <div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Location\"\n                      value={newLocation}\n                      onChange={(e) => setNewLocation(e.target.value)}\n                    />\n                    <button onClick={handleSaveLocation}>Save Location</button>\n                  </div>\n                  <div>\n                    <select value={selectedUser ? selectedUser._id : ''} onChange={(e) => setSelectedUser(savedLocations.find((user) => user._id === e.target.value))}>\n                      {savedLocations.map((user) => (\n                        <option value={user._id}>{user.username}</option>\n                      ))}\n                    </select>\n                  </div>\n                  </div>\n                  <SavedLocations users={savedLocations} onDelete={handleDeleteLocation} />\n                </>\n              } />\n            </Routes>\n          </>\n        )}\n      </div>\n    </Router>\n  );\n\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}